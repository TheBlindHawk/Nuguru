/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.tris;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author user
 */
public class tris extends javax.swing.JPanel {

    /**
     * Creates new form tris
     */
    public tris() {
        initComponents();
        int i, y;
        PosizionaBottoni();
        comandi();
        //tabelle();
    }
    private int p = 0;
    JButton but[][] = new JButton[3][3];

    public void PosizionaBottoni() {
        int i, y, n = 70;
        for (i = 0; i < 3; i++) {
            for (y = 0; y < 3; y++) {
                but[i][y] = new JButton("");
                but[i][y].setName(Integer.toString(i) + "/" + Integer.toString(y));
                but[i][y].setBounds(i * n, y * n, n - 10, n - 10);
                this.add(but[i][y]);
                but[i][y].setBackground(java.awt.Color.lightGray);
            }
        }
    }

    public void comandi() {
        int i, y;
        for (i = 0; i < 3; i++) {
            for (y = 0; y < 3; y++) {
                but[i][y].addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        String pigiato[] = new String[2];
                        JButton pigio = (JButton) e.getSource();
                        pigiato = (pigio.getName()).split("/");
                        String play;
                        int i, y, j, b1, b2;
                        b1 = Integer.parseInt(pigiato[0]);
                        b2 = Integer.parseInt(pigiato[1]);
                        if (p == 0) {
                            play = "X";
                            but[b1][b2].setForeground(java.awt.Color.blue);
                            p = 1;
                        } else {
                            play = "O";
                            but[b1][b2].setForeground(java.awt.Color.red);
                            p = 0;
                        }
                        but[b1][b2].setText(play);
                        if (controlla()==true) 
                            vittoria(play);
                        but[b1][b2].removeActionListener(this);
                    }
                });
                
            }
        }
    }

    public boolean controlla() {
        int i, y, j;
        String c1[] = new String[3];
        String c2[] = new String[3];
        for (i = 0; i < 3; i++) {
            for (y = 0; y < 3; y++) {
                c1[y] = but[i][y].getText();
                c2[y] = but[y][i].getText();
                if (c1[0].equals(c1[1]) && c1[1].equals(c1[2]) && (c1[0].equals("X") || c1[0].equals("O"))) {
                    return (true);
                }
                if (c2[0].equals(c2[1]) && c2[1].equals(c2[2]) && (c2[0].equals("X") || c2[0].equals("O"))) {
                    return (true);
                }
            }
        }
        if(but[0][0].equals(but[1][1]) && but[1][1].equals(but[2][2]))
            return (true);
        if(but[2][0].equals(but[1][1]) && but[1][1].equals(but[0][2]))
            return (true);
        return (false);
    }


    public void vittoria(String vv) {
        int i, y, j, x, num;
        for (i = 0; i < 3; i++) {
            for (y = 0; y < 3; y++) {
                but[i][y].setBackground(java.awt.Color.lightGray);
                ActionListener l[] = but[i][y].getActionListeners();
                int n = l.length;
                for (num = 0; num < n; num++) {
                    but[i][y].removeActionListener(l[num]);
                }
            }
        }
        JLabel victory=new JLabel("");
        victory.setText("VICTORY");
        //victory.setForeground(Color.white);
        if (vv.equals("X")) 
            victory.setForeground(Color.blue);
        else 
            victory.setForeground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
